USE [DataHIS] 
GO
IF OBJECT_ID('[dbo].[PERIODO_TMP]', 'U') IS NOT NULL
BEGIN
	DROP TABLE PERIODO_TMP
	PRINT 'SE ELIMINO LA TABLA PERIODO_TMP'
END
ELSE
	PRINT 'NO FUE NECESARIO ELIMINAR LA TABLA PERIODO_TMP'

CREATE TABLE PERIODO_TMP(
I_ID INT IDENTITY,
I_ANIO INT,
I_MES INT,
I_ESTADO INT)
PRINT 'SE CREO LA TABLA PERIODO_TMP'


IF OBJECT_ID('[dbo].[REGISTRADOR]', 'U') IS NOT NULL
BEGIN
	DROP TABLE REGISTRADOR
	PRINT 'SE ELIMINO LA TABLA REGISTRADOR'
END
ELSE
	PRINT 'NO FUE NECESARIO ELIMINAR LA TABLA REGISTRADOR'
	
CREATE TABLE REGISTRADOR(
ID_REGISTRADOR VARCHAR (50),
ID_TIPO_DOCUMENTO VARCHAR (2),
NUMERO_DOCUMENTO VARCHAR (15),
APELLIDO_PATERNO_REGISTRADOR NVARCHAR (50),
APELLIDO_MATERNO_REGISTRADOR NVARCHAR (50),
NOMBRES_REGISTRADOR NVARCHAR (50),
FECHA_NACIMIENTO DATE
)ON [REPORTES]
PRINT 'SE CREO LA TABLA REGISTRADOR'


IF OBJECT_ID('[dbo].[PERSONAL]', 'U') IS NOT NULL
BEGIN
	DROP TABLE PERSONAL
	PRINT 'SE ELIMINO LA TABLA PERSONAL'
END  
ELSE
	PRINT 'NO FUE NECESARIO ELIMINAR LA TABLA PERSONAL'
	
CREATE TABLE PERSONAL(
ID_PERSONAL VARCHAR(50),
ID_TIPO_DOCUMENTO VARCHAR(2),
NUMERO_DOCUMENTO VARCHAR(15),
APELLIDO_PATERNO_PERSONAL NVARCHAR(50),
APELLIDO_MATERNO_PERSONAL NVARCHAR(50),
NOMBRES_PERSONAL NVARCHAR(50),
FECHA_NACIMIENTO DATE,
ID_CONDICION VARCHAR(2),
ID_PROFESION VARCHAR(2),
ID_COLEGIO VARCHAR(2),
NUMERO_COLEGIATURA VARCHAR(15),
ID_ESTABLECIMIENTO INT,
FECHA_ALTA DATETIME,
FECHA_BAJA DATETIME
)ON [REPORTES]
PRINT 'SE CREO LA TABLA PERSONAL'


IF OBJECT_ID('[dbo].[PACIENTE]', 'U') IS NOT NULL
BEGIN
	DROP TABLE PACIENTE
	PRINT 'SE ELIMINO LA TABLA PACIENTE'
END
ELSE
	PRINT 'NO FUE NECESARIO ELIMINAR LA TABLA PACIENTE'

CREATE TABLE PACIENTE(
ID_PACIENTE VARCHAR(50),
ID_TIPO_DOCUMENTO VARCHAR(2),
NUMERO_DOCUMENTO VARCHAR(15),
APELLIDO_PATERNO_PACIENTE NVARCHAR(50),
APELLIDO_MATERNO_PACIENTE NVARCHAR(50),
NOMBRES_PACIENTE NVARCHAR(50),
FECHA_NACIMIENTO DATE,
GENERO VARCHAR(1),
ID_ETNIA VARCHAR(2),
HISTORIA_CLINICA VARCHAR(15),
FICHA_FAMILIAR VARCHAR(15),
UBIGEO_NACIMIENTO VARCHAR(6),
UBIGEO_RENIEC VARCHAR(6),
DOMICILIO_RENIEC NVARCHAR(100),
UBIGEO_DECLARADO VARCHAR(6),
DOMICILIO_DECLARADO NVARCHAR(200),
REFERENCIA_DOMICILIO NVARCHAR(200),
ID_PAIS VARCHAR(3),
ID_ESTABLECIMIENTO INT,
FECHA_ALTA DATETIME,
FECHA_MODIFICACION DATETIME
)ON [REPORTES]
PRINT 'SE CREO LA TABLA PACIENTE'

IF OBJECT_ID('[dbo].[HIS_Nominal]', 'U') IS NOT NULL
BEGIN
	DROP TABLE HIS_Nominal
	PRINT 'SE ELIMINO LA TABLA HIS_Nominal'
END
ELSE
	PRINT 'NO FUE NECESARIO ELIMINAR LA TABLA HIS_Nominal'

CREATE TABLE HIS_Nominal(
ID_CITA VARCHAR(50),
ANIO VARCHAR(4),
MES VARCHAR(2),
DIA VARCHAR(2),
FECHA_ATENCION DATE,
LOTE VARCHAR(3),
NUM_PAG INT,
NUM_REG INT,
ID_UPS VARCHAR(6),
ID_ESTABLECIMIENTO INT,
ID_PACIENTE VARCHAR(50),
ID_PERSONAL VARCHAR(50),
ID_REGISTRADOR VARCHAR(50),
ID_FINANCIADOR VARCHAR(2),
ID_CONDICION_ESTABLECIMIENTO VARCHAR(1),
ID_CONDICION_SERVICIO VARCHAR(1),
-- Ubigeo_Inei VARCHAR(10),
EDAD_REG INT,
TIPO_EDAD VARCHAR(1),
ANIO_ACTUAL_PACIENTE INT,
MES_ACTUAL_PACIENTE INT,
DIA_ACTUAL_PACIENTE INT,
ID_TURNO VARCHAR(1),
CODIGO_ITEM VARCHAR (15),
TIPO_DIAGNOSTICO VARCHAR(1),
VALOR_LAB VARCHAR(3),
ID_CORRELATIVO INT,
ID_CORRELATIVO_LAB INT,
PESO DECIMAL(9,3), --PESO DECIMAL(6,3),
TALLA DECIMAL(8,2),--TALLA DECIMAL(5,2),
HEMOGLOBINA DECIMAL(5,2),
PAC DECIMAL(5,2),
PC DECIMAL(5,2),
ID_OTRA_CONDICION INT,
ID_CENTRO_POBLADO VARCHAR(10),
FECHA_ULTIMA_REGLA DATE,
FECHA_SOLICITUD_HB DATE,
FECHA_RESULTADO_HB DATE,
FECHA_REGISTRO DATETIME,
FECHA_MODIFICACION DATETIME,
ID_PAIS VARCHAR(3)
)ON [REPORTES]
PRINT 'SE CREO LA TABLA HIS_Nominal'

-- SI SE TIENE PROBLEMAS CON EL CODEPAGE = '65001' DEBE QUITARLO
DECLARE @NombreRuta VARCHAR(250), 
		@NombreRutaArchivoRegistrador VARCHAR(250), 
		@NombreRutaArchivoPersonal VARCHAR(250), 
		@NombreRutaArchivoPaciente VARCHAR(250), 
		@NombreRutaArchivoPlano VARCHAR(250), 
		@StrExe NVARCHAR(MAX),
		@Existe INT,
		@AnnioArchivo VARCHAR(4),
		@MesArchivo VARCHAR(2),
		@InicioNombreArchivo INT,
		@FinNombreArchivo INT,
		@Codepage INT

--- Agregar la condicion codepage permite que las letras ñ o tildes se puedan ver de manera correcta
--- Por default esta en 0(CERO), si deseas ver de manera correcta @Codepage 1(UNO)
SET @Codepage=1
--==============================================================================================

PRINT '<===================INICIO DE IMPORTACION===================>'

SET @NombreRuta = 'C:\HISMINSA\MAESTROS'
SET @NombreRutaArchivoRegistrador = @NombreRuta + '\MAESTROREGISTRADOR.csv'
SET @NombreRutaArchivoPersonal = @NombreRuta + '\MAESTROPERSONAL.csv'
SET @NombreRutaArchivoPaciente = @NombreRuta +'\MAESTROPACIENTE.csv'


-- INSERT REGISTRADOR
SET @Existe = 0
EXEC Master.dbo.xp_fileexist @NombreRutaArchivoRegistrador , @Existe OUT
IF @Existe = 1
BEGIN
	SET @StrExe = 	' BULK INSERT REGISTRADOR ' +
					' FROM ''' + @NombreRutaArchivoRegistrador + ''''
	IF(@Codepage=1)
	BEGIN
		SET @StrExe = @StrExe + ' WITH (CODEPAGE = ''65001'', FIRSTROW =2, FIELDTERMINATOR = '','', ROWTERMINATOR = ''\n'', TABLOCK)'
	END
	ELSE
	BEGIN
		SET @StrExe = @StrExe + ' WITH (FIRSTROW =2, FIELDTERMINATOR = '','', ROWTERMINATOR = ''\n'', TABLOCK)'
	END
	
	EXEC SP_EXECUTESQL @StrExe
	PRINT('EXISTE EL ARCHIVO '+ @NombreRutaArchivoRegistrador)
END
ELSE
BEGIN
	PRINT('NO EXISTE EL ARCHIVO '+ @NombreRutaArchivoRegistrador);
END

-- INSERT PERSONAL
SET @Existe = 0
EXEC Master.dbo.xp_fileexist @NombreRutaArchivoPersonal , @Existe OUT
IF @Existe = 1
BEGIN
	SET @StrExe = 	' BULK INSERT PERSONAL ' +
					' FROM ''' + @NombreRutaArchivoPersonal + ''''
	
	IF(@Codepage=1)
	BEGIN
		SET @StrExe = @StrExe + ' WITH (CODEPAGE = ''65001'', FIRSTROW =2, FIELDTERMINATOR = '','', ROWTERMINATOR = ''\n'', TABLOCK)'
	END
	ELSE
	BEGIN
		SET @StrExe = @StrExe + ' WITH (FIRSTROW =2, FIELDTERMINATOR = '','', ROWTERMINATOR = ''\n'', TABLOCK)'
	END
		
	EXEC SP_EXECUTESQL @StrExe
	PRINT('EXISTE EL ARCHIVO '+ @NombreRutaArchivoPersonal)
END
ELSE
BEGIN
	PRINT('NO EXISTE EL ARCHIVO '+ @NombreRutaArchivoPersonal);
END

-- INSERT PACIENTE
SET @Existe = 0
EXEC Master.dbo.xp_fileexist @NombreRutaArchivoPaciente , @Existe OUT
IF @Existe = 1
BEGIN
	SET @StrExe = 	' BULK INSERT PACIENTE ' +
					' FROM ''' + @NombreRutaArchivoPaciente + ''''
	
	IF(@Codepage=1)
	BEGIN
		SET @StrExe = @StrExe + ' WITH (CODEPAGE = ''65001'', FIRSTROW =2, FIELDTERMINATOR = '','', ROWTERMINATOR = ''\n'', TABLOCK)'
	END
	ELSE
	BEGIN
		SET @StrExe = @StrExe + ' WITH (FIRSTROW =2, FIELDTERMINATOR = '','', ROWTERMINATOR = ''\n'', TABLOCK)'
	END
		
	EXEC SP_EXECUTESQL @StrExe
	PRINT('EXISTE EL ARCHIVO '+ @NombreRutaArchivoPaciente)
END
ELSE
BEGIN
	PRINT('NO EXISTE EL ARCHIVO '+ @NombreRutaArchivoPaciente);
END


--HIS==========================================================================================
PRINT ''
PRINT ''
PRINT '>>>>>>> INICIO DE INSERCIÓN MAESTROS HIS <<<<<<<<'

-- INSERT HIS_Nominal
INSERT INTO PERIODO_TMP(I_ANIO, I_MES, I_ESTADO)
SELECT I_ANIO, I_MES, I_ESTADO FROM PERIODO WHERE I_ESTADO=1

SELECT @InicioNombreArchivo=MIN(I_ID), @FinNombreArchivo=MAX(I_ID) FROM PERIODO_TMP

WHILE(@InicioNombreArchivo<=@FinNombreArchivo)
BEGIN
	SELECT @AnnioArchivo=I_ANIO, @MesArchivo=I_MES FROM PERIODO_TMP WHERE I_ID=@InicioNombreArchivo

	SET @NombreRutaArchivoPlano = @NombreRuta + '\HIS\NominalTramaNuevo_' + @AnnioArchivo + '_' + @MesArchivo + '.csv'

	SET @Existe = 0
	EXEC Master.dbo.xp_fileexist @NombreRutaArchivoPlano , @Existe OUT
	IF @Existe = 1
	BEGIN
		SET @StrExe = 	' BULK INSERT HIS_Nominal ' +
						' FROM ''' + @NombreRutaArchivoPlano + '''' 

	IF(@Codepage=1)
	BEGIN
		SET @StrExe = @StrExe + ' WITH (CODEPAGE = ''65001'', FIRSTROW =2, FIELDTERMINATOR = '','', ROWTERMINATOR = ''\n'', TABLOCK)'
	END
	ELSE
	BEGIN
		SET @StrExe = @StrExe + ' WITH (FIRSTROW =2, FIELDTERMINATOR = '','', ROWTERMINATOR = ''\n'', TABLOCK)'
	END

		--PRINT @StrExe
		EXEC SP_EXECUTESQL @StrExe
		PRINT('EXISTE EL ARCHIVO '+ @NombreRutaArchivoPlano)
	END
	ELSE
	BEGIN
		PRINT ('NO EXISTE EL ARCHIVO '+ @NombreRutaArchivoPlano);
	END
	
	SET @InicioNombreArchivo = @InicioNombreArchivo + 1
END

PRINT '<===================FIN DE IMPORTACION===================>'